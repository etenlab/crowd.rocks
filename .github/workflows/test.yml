name: Pre-Test Workflow
on:
  pull_request:
    branches: [dev, prod, test]
    types: [opened, synchronize, reopened]
    paths:
      - "api/**"
      - "frontend/**"

jobs:
  test-buildable:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_GITHUB_S3_PUSHER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_GITHUB_S3_PUSHER_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: etenlab/crowd-rocks

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: etenlab/crowd-rocks:test
          labels: ${{ steps.meta.outputs.labels }}
          build-args: BUILD_MODE=test

  test-api-e2e:
    runs-on: ubuntu-latest
    needs: test-buildable
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: isbang/compose-action@v1.4.1
        with:
          compose-file: "./.github/docker/docker-compose.yml"
          down-flags: "--volumes"
          services: |
            postgres

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: cd utils && npm ci

      - run: cd api && cp .env.example .env && yarn install

      - name: Test
        run: cd api && yarn test:e2e

  test-frontend-playwright:
    runs-on: ubuntu-latest
    needs: test-buildable
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: isbang/compose-action@v1.4.1
        with:
          compose-file: "./.github/docker/docker-compose.yml"
          down-flags: "--volumes"
          services: |
            postgres
            api
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_GITHUB_S3_PUSHER_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_GITHUB_S3_PUSHER_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-2

      - run: cd utils && npm ci
        
      - run: cd frontend && npm ci --force

      - name: Install Playwright Browsers
        run: cd frontend && npx playwright install --with-deps

      - name: Run Playwright tests
        run: cd frontend && npx playwright test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-report
          path: |
              ${{ github.workspace }}/frontend/test-results/
              ${{ github.workspace }}/frontend/playwright-report/
          retention-days: 30
