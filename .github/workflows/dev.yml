name: Build, Dockerize, Upload
on:
  push:
    branches:
      - workflow

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Prepare Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies for frontend
        run: cd frontend && npm install

      - name: Build frontend
        run: cd frontend && npm run build

      - name: Install dependencies for api
        run: cd api && yarn install

      - name: Build api
        run: cd api && yarn run build

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: etenlab/crowd-rocks

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: etenlab/crowd-rocks:latest
          labels: ${{ steps.meta.outputs.labels }}

      # - name: Download task definition
      #   run: |
      #     aws ecs describe-task-definition --task-definition cpgServer \
      #     --query taskDefinition > task-definition.json

      # - name: Deploy Amazon ECS task definition
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     task-definition: task-definition.json
      #     service: cpgServerService
      #     cluster: dev-cluster
      #     wait-for-service-stability: true
