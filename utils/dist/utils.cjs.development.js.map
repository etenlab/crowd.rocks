{"version":3,"file":"utils.cjs.development.js","sources":["../src/constants.ts","../src/sortingFns/sortingFns.ts","../src/langUtils/langUtils.ts"],"sourcesContent":["import { TDialect, TLang, TRegion } from './types';\n\nexport const DESCRIPTIONS_JOINER = '/';\nexport const NOT_DEFINED_PLACEHOLDER = '- not defined -';\nexport const LOADING_TAG_PLACEHOLDER = {\n  tag: 'loading',\n  descriptions: ['Loading data...'],\n} as TDialect & TRegion & TLang;\n\nexport enum GroupedFilterSymbols {\n  Digits = '0-9',\n  SpecialCharacters = '#',\n}\n","import { NOT_DEFINED_PLACEHOLDER } from '../constants';\nimport { IDefinition, ITagInfo } from '../types';\n\nexport const sortSiteTextFn = (d1: IDefinition, d2: IDefinition) => {\n  if (\n    d1.siteTextlikeString &&\n    d2.siteTextlikeString &&\n    d1.siteTextlikeString.toLowerCase() > d2.siteTextlikeString.toLowerCase()\n  ) {\n    return 1;\n  }\n\n  if (\n    d1.siteTextlikeString &&\n    d2.siteTextlikeString &&\n    d1.siteTextlikeString.toLowerCase() < d2.siteTextlikeString.toLowerCase()\n  ) {\n    return -1;\n  }\n  return 0;\n};\n\nexport const sortTagInfosFn = (t1: ITagInfo, t2: ITagInfo) => {\n  if (t1.descriptions && t1.descriptions[0] === NOT_DEFINED_PLACEHOLDER) {\n    return -1;\n  }\n  if (t2.descriptions && t2.descriptions[0] === NOT_DEFINED_PLACEHOLDER) {\n    return 1;\n  }\n  if (\n    t1.descriptions &&\n    t2.descriptions &&\n    t1.descriptions[0] > t2.descriptions[0]\n  ) {\n    return 1;\n  }\n  if (\n    t1.descriptions &&\n    t2.descriptions &&\n    t1.descriptions[0] < t2.descriptions[0]\n  ) {\n    return -1;\n  }\n  return 0;\n};\n","import { DESCRIPTIONS_JOINER, NOT_DEFINED_PLACEHOLDER } from '../constants';\nimport { sortTagInfosFn } from '../sortingFns/sortingFns';\nimport {\n  LanguageInfo,\n  LanguageInput,\n  TDialect,\n  TLang,\n  TRegion,\n} from '../types';\n\nimport Tags from 'language-tags';\n\n// X_LANG_TAGS is an array of private (x-...) subtags; they are used as additional language tags to represent languages\n// that are not present in the `language-tags` npm package (which refers to the IANA registry).\n// List of main language tags we get from the `language-tags` library will be extended with these x- tags.\nexport const X_LANG_TAGS: Array<TLang> = [\n  { tag: 'x-senga', descriptions: ['Senga'] },\n  { tag: 'x-fungwe', descriptions: ['Fungwe'] },\n  { tag: 'x-tambo', descriptions: ['Tambo'] },\n  { tag: 'x-wandya', descriptions: ['Wandya'] },\n  { tag: 'x-lungu', descriptions: ['Lungu'] },\n  { tag: 'x-chikunda', descriptions: ['Chikunda'] },\n  { tag: 'x-kabdende', descriptions: ['Kabdende'] },\n  { tag: 'x-shila', descriptions: ['Shila'] },\n  { tag: 'x-mwenyi', descriptions: ['Mwenyi'] },\n  { tag: 'x-liuwa', descriptions: ['Liuwa'] },\n  { tag: 'x-Seabo', descriptions: ['Seabo'] },\n];\n\nenum TagTypes {\n  LANGUAGE = 'language',\n  REGION = 'region',\n  DIALECT = 'variant',\n}\n\nexport const xTag2langInfo = (tagGiven: string): LanguageInfo | undefined => {\n  const foundXtagIndex = X_LANG_TAGS.findIndex((xTag) => xTag.tag === tagGiven);\n  if (foundXtagIndex >= 0) {\n    return {\n      lang: X_LANG_TAGS[foundXtagIndex],\n    };\n  } else return undefined;\n};\n\nexport const tag2langInfo = (tagGiven: string): LanguageInfo => {\n  if (xTag2langInfo(tagGiven)) return xTag2langInfo(tagGiven)!;\n  const complexTag = Tags(tagGiven);\n  const lang = complexTag.find(TagTypes.LANGUAGE);\n  const region = complexTag.find(TagTypes.REGION);\n  const dialect = complexTag.find(TagTypes.DIALECT);\n  const langInfo: LanguageInfo = {\n    lang: { tag: lang?.format() || '', descriptions: lang?.descriptions() },\n  };\n  if (region) {\n    langInfo.region = {\n      tag: region.format(),\n      descriptions: region.descriptions(),\n    };\n  }\n  if (dialect) {\n    langInfo.dialect = {\n      tag: dialect.format(),\n      descriptions: dialect.descriptions(),\n    };\n  }\n  return langInfo;\n};\n\nexport const langInfo2tag = (\n  langInfo: LanguageInfo | undefined\n): string | undefined => {\n  if (!langInfo) return undefined;\n  const { lang, region, dialect } = langInfo;\n  let langTag = lang.tag;\n\n  const xTag = X_LANG_TAGS.find((xt) => xt.tag === langTag);\n  if (xTag) return xTag.tag;\n\n  region?.tag && (langTag += '-' + region?.tag);\n  dialect?.tag && (langTag += '-' + dialect?.tag);\n  return Tags(langTag).format();\n};\n\nexport const langInfo2langInput = (langInfo: LanguageInfo): LanguageInput => {\n  return {\n    language_code: langInfo.lang.tag,\n    dialect_code: langInfo.dialect?.tag || null,\n    geo_code: langInfo.region?.tag || null,\n  };\n};\n\nexport const langInfo2String = (langInfo: LanguageInfo | undefined): string => {\n  const xTag = X_LANG_TAGS.find((xt) => xt.tag === langInfo?.lang.tag);\n  if (xTag) {\n    return xTag.descriptions?.join(DESCRIPTIONS_JOINER) || xTag.tag;\n  }\n  let res = langInfo?.lang.descriptions?.join(DESCRIPTIONS_JOINER);\n  if (!res) return '';\n  if (langInfo?.region?.descriptions) {\n    res += ' ' + langInfo.region?.descriptions.join(DESCRIPTIONS_JOINER);\n  }\n  if (langInfo?.dialect?.descriptions) {\n    res +=\n      ', dialect:' + langInfo?.dialect?.descriptions.join(DESCRIPTIONS_JOINER);\n  }\n  return res;\n};\n\nexport const subTags2LangInfo = ({\n  lang,\n  region,\n  dialect,\n}: {\n  lang: string;\n  region?: string;\n  dialect?: string;\n}): LanguageInfo => {\n  if (xTag2langInfo(lang)) return xTag2langInfo(lang)!;\n  let langTag = lang;\n  region && (langTag += '-' + region);\n  dialect && (langTag += '-' + dialect);\n  langTag = Tags(langTag).format();\n  return tag2langInfo(langTag);\n};\n\nexport const compareLangInfo = (\n  a: LanguageInfo | null | undefined,\n  b: LanguageInfo | null | undefined\n): boolean => {\n  if (a === b) return true; // case both null or both undefined\n  if (!a || !b) return false; // case one of them null or undefined\n  if (a.lang.tag !== b.lang.tag) {\n    return false;\n  }\n\n  if (a.dialect?.tag !== b.dialect?.tag) {\n    return false;\n  }\n\n  if (a.region?.tag !== b.region?.tag) {\n    return false;\n  }\n\n  return true;\n};\n\ntype LangsRegistry = {\n  langs: Array<TLang>;\n  dialects: Array<TDialect>;\n  regions: Array<TRegion>;\n};\n\nenum TagSpecialDescriptions {\n  PRIVATE_USE = 'Private use',\n}\n\n// make it async to test and prepare for possible language library change to async\nexport const getLangsRegistry = async (\n  enabledTags?: string[]\n): Promise<LangsRegistry> => {\n  return new Promise((resolve) => {\n    const allTags = Tags.search(/.*/);\n    const langs: Array<TLang> = enabledTags\n      ? [...X_LANG_TAGS].filter((xt) => enabledTags.includes(xt.tag))\n      : [...X_LANG_TAGS];\n    const dialects: Array<TDialect> = [\n      { tag: null, descriptions: [NOT_DEFINED_PLACEHOLDER] },\n    ];\n    const regions: Array<TRegion> = [\n      { tag: null, descriptions: [NOT_DEFINED_PLACEHOLDER] },\n    ];\n\n    for (const currTag of allTags) {\n      if (enabledTags && !enabledTags.includes(currTag.format())) {\n        continue;\n      }\n\n      if (\n        currTag.deprecated() ||\n        currTag.descriptions().includes(TagSpecialDescriptions.PRIVATE_USE)\n      ) {\n        continue;\n      }\n\n      if (currTag.type() === TagTypes.LANGUAGE) {\n        langs.push({\n          tag: currTag.format(),\n          descriptions: currTag.descriptions(),\n        });\n      }\n      if (currTag.type() === TagTypes.REGION) {\n        regions.push({\n          tag: currTag.format(),\n          descriptions: currTag.descriptions(),\n        });\n      }\n      if (currTag.type() === TagTypes.DIALECT) {\n        dialects.push({\n          tag: currTag.format(),\n          descriptions: currTag.descriptions(),\n        });\n      }\n    }\n    langs.sort(sortTagInfosFn);\n    dialects.sort(sortTagInfosFn);\n    regions.sort(sortTagInfosFn);\n\n    resolve({\n      langs,\n      dialects,\n      regions,\n    });\n  });\n};\n\nexport const subTags2Tag = ({\n  lang,\n  region,\n  dialect,\n}: {\n  lang: string;\n  region?: string;\n  dialect?: string;\n}): string => {\n  if (X_LANG_TAGS.find((xt) => xt.tag === lang)) return lang;\n  let langTag = lang;\n  region && (langTag += '-' + region);\n  dialect && (langTag += '-' + dialect);\n  return Tags(langTag).format();\n};\n\nexport const languageInput2tag = (languageInput: LanguageInput): string => {\n  return subTags2Tag({\n    lang: languageInput.language_code,\n    dialect: languageInput.dialect_code || undefined,\n    region: languageInput.geo_code || undefined,\n  });\n};\n"],"names":["DESCRIPTIONS_JOINER","NOT_DEFINED_PLACEHOLDER","LOADING_TAG_PLACEHOLDER","tag","descriptions","GroupedFilterSymbols","sortSiteTextFn","d1","d2","siteTextlikeString","toLowerCase","sortTagInfosFn","t1","t2","X_LANG_TAGS","TagTypes","xTag2langInfo","tagGiven","foundXtagIndex","findIndex","xTag","lang","undefined","tag2langInfo","complexTag","Tags","find","LANGUAGE","region","REGION","dialect","DIALECT","langInfo","format","langInfo2tag","langTag","xt","langInfo2langInput","_langInfo$dialect","_langInfo$region","language_code","dialect_code","geo_code","langInfo2String","_langInfo$lang$descri","_langInfo$region2","_langInfo$dialect2","_xTag$descriptions","join","res","_langInfo$region3","_langInfo$dialect3","subTags2LangInfo","_ref","compareLangInfo","a","b","_a$dialect","_b$dialect","_a$region","_b$region","TagSpecialDescriptions","getLangsRegistry","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","enabledTags","wrap","_callee$","_context","prev","next","abrupt","Promise","resolve","allTags","search","langs","concat","filter","includes","dialects","regions","_iterator","_createForOfIteratorHelperLoose","_step","done","currTag","value","deprecated","PRIVATE_USE","type","push","sort","stop","_x","apply","arguments","subTags2Tag","_ref3","languageInput2tag","languageInput"],"mappings":"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"}