# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddWordAsTranslationForWordInput {
  originalDefinitionId: String!
  translationDefinition: String!
  translationWord: WordUpsertInput!
}

type AddWordAsTranslationForWordOutput {
  error: ErrorType!
  wordTranslationId: String!
}

input AvatarUpdateInput {
  avatar: String!
}

type AvatarUpdateOutput {
  error: ErrorType!
  user: User
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

union Definition = PhraseDefinition | WordDefinition

type DefinitionUpdateOutput {
  error: ErrorType!
  phrase_definition: PhraseDefinition
  word_definition: WordDefinition
}

input DefinitionUpdateaInput {
  definition_id: ID!
  definition_type_is_word: Boolean!
  definitionlike_string: String!
}

type DefinitionVoteStatus {
  definition_id: ID!
  downvotes: Int!
  upvotes: Int!
}

type DefinitionVoteStatusOutputRow {
  error: ErrorType!
  vote_status: DefinitionVoteStatus
}

input EmailResponseInput {
  token: String!
}

type EmailResponseOutput {
  error: ErrorType!
}

enum ErrorType {
  AvatarNotFound
  AvatarTooLong
  AvatarTooShort
  AvatarUnavailable
  CandidateNotFound
  CandidateNotFoundInBallot
  ElectionNotFound
  EmailInvalid
  EmailIsBlocked
  EmailNotFound
  EmailTooLong
  EmailTooShort
  EmailUnavailable
  InvalidEmailOrPassword
  InvalidInputs
  LimitInvalid
  MapFilenameAlreadyExists
  MapInsertFailed
  NoError
  OffsetInvalid
  ParentElectionNotFound
  PasswordInvalid
  PasswordTooLong
  PasswordTooShort
  PhraseDefinitionNotFound
  PhraseNotFound
  PositionInvalid
  PostCreateFailed
  PrefixInvalid
  PrefixTooLong
  PrefixTooShort
  RankInvalid
  RankUnchanged
  SiteTextTranslationNotFound
  SiteTextWordDefinitionAlreadyExists
  SiteTextWordDefinitionNotFound
  TokenInvalid
  Unauthorized
  UnknownError
  WordDefinitionNotFound
  WordInsertFailed
  WordLikeStringInsertFailed
  WordNotFound
}

input FileUploadUrlRequest {
  user_id: ID!
}

type FileUploadUrlResponse {
  avatar_image_url: String!
  error: ErrorType!
  url: String!
}

input FromPhraseAndDefintionlikeStringUpsertInput {
  definitionlike_string: String!
  dialect_code: String
  geo_code: String
  language_code: String!
  phraselike_string: String!
}

input FromWordAndDefintionlikeStringUpsertInput {
  definitionlike_string: String!
  dialect_code: String
  geo_code: String
  language_code: String!
  wordlike_string: String!
}

input GetOrigMapContentInput {
  original_map_id: ID!
}

type GetOrigMapContentOutput {
  content: String!
  created_at: String!
  created_by: ID!
  map_file_name: String!
  original_map_id: ID!
}

input GetOrigMapListInput {
  search: String
}

input GetOrigMapWordsInput {
  o_dialect_code: String
  o_geo_code: String
  o_language_code: String
  original_map_id: ID
  t_dialect_code: String
  t_geo_code: String
  t_language_code: String
}

type GetOrigMapWordsOutput {
  origMapWords: [WordTranslations!]!
}

type GetOrigMapsListOutput {
  origMapList: [MapFileOutput!]!
}

input LanguageInput {
  dialect_code: String
  geo_code: String
  language_code: String!
}

input LoginInput {
  email: String!
  password: String!
}

type LoginOutput {
  error: ErrorType!
  session: Session
}

input LogoutInput {
  token: String!
}

type LogoutOutput {
  error: ErrorType!
}

type MapFileOutput {
  created_at: String!
  created_by: ID!
  map_file_name: String!
  original_map_id: ID!
}

type Mutation {
  addWordAsTranslationForWord(input: AddWordAsTranslationForWordInput!): AddWordAsTranslationForWordOutput!
  avatarUpdateResolver(input: AvatarUpdateInput!): AvatarUpdateOutput!
  emailResponseResolver(input: EmailResponseInput!): EmailResponseOutput!
  getPhraseDefinitonToggleVoteStatus(phrase_definition_id: ID!, vote: Boolean!): DefinitionVoteStatusOutputRow!
  getWordDefinitonToggleVoteStatus(vote: Boolean!, word_definition_id: ID!): DefinitionVoteStatusOutputRow!
  login(input: LoginInput!): LoginOutput!
  logout(input: LogoutInput!): LogoutOutput!
  mapUpload(file: Upload!): MapFileOutput!
  passwordResetFormResolver(input: PasswordResetFormInput!): LoginOutput!
  phraseDefinitionUpsert(input: PhraseDefinitionUpsertInput!): PhraseDefinitionUpsertOutput!
  phraseToPhraseTranslationUpsert(input: PhraseToPhraseTranslationUpsertInput!): PhraseToPhraseTranslationUpsertOutput!
  phraseUpsert(input: PhraseUpsertInput!): PhraseUpsertOutput!
  phraseVoteUpsert(input: PhraseVoteUpsertInput!): PhraseVoteOutput!
  postCreateResolver(input: PostCreateInput!): PostCreateOutput!
  register(input: RegisterInput!): RegisterOutput!
  resetEmailRequest(input: ResetEmailRequestInput!): ResetEmailRequestOutput!
  siteTextLanguageUpsert(input: SiteTextLanguageUpsertInput!): SiteTextLanguageOutput!
  siteTextPhraseDefinitionUpsert(input: SiteTextPhraseDefinitionUpsertInput!): SiteTextPhraseDefinitionUpsertOutput!
  siteTextTranslationUpsert(input: SiteTextTranslationInput!): SiteTextTranslationUpsertOutput!
  siteTextTranslationVoteUpsert(input: SiteTextTranslationVoteUpsertInput!): SiteTextTranslationVoteUpsertOutput!
  siteTextUpsert(input: SiteTextUpsertInput!): SiteTextUpsertOutput!
  siteTextWordDefinitionUpsert(input: SiteTextWordDefinitionUpsertInput!): SiteTextWordDefinitionUpsertOutput!
  togglePhraseVoteStatus(phrase_id: ID!, vote: Boolean!): PhraseVoteStatusOutputRow!
  toggleVoteStatus(site_text_translation_id: String!, vote: Boolean!): VoteStatusOutputRow!
  toggleWordVoteStatus(vote: Boolean!, word_id: ID!): WordVoteStatusOutputRow!
  updateDefinition(input: DefinitionUpdateaInput!): PhraseDefinitionUpsertOutput!
  upsertFromTranslationlikeString(fromInput: SiteTextTranslationsFromInput!, toInput: SiteTextTranslationsToInput!): SiteTextTranslationUpsertOutput!
  upsertPhraseDefinitionFromPhraseAndDefinitionlikeString(input: FromPhraseAndDefintionlikeStringUpsertInput!): PhraseDefinitionUpsertOutput!
  upsertTranslation(input: SiteTextTranslationUpsertInput!): SiteTextTranslationUpsertOutput!
  upsertWordDefinitionFromWordAndDefinitionlikeString(input: FromWordAndDefintionlikeStringUpsertInput!): WordDefinitionUpsertOutput!
  versionCreateResolver(input: VersionCreateInput!): VersionCreateOutput!
  wordDefinitionUpsert(input: WordDefinitionUpsertInput!): WordDefinitionUpsertOutput!
  wordToPhraseTranslationUpsert(input: WordToPhraseTranslationUpsertInput!): WordToPhraseTranslationUpsertOutput!
  wordToWordTranslationUpsert(input: WordToWordTranslationUpsertInput!): WordToWordTranslationUpsertOutput!
  wordUpsert(input: WordUpsertInput!): WordUpsertOutput!
  wordVoteUpsert(input: WordVoteUpsertInput!): WordVoteOutput!
}

input PasswordResetFormInput {
  password: String!
  token: String!
}

type Phrase {
  phrase: String!
  phrase_id: ID!
}

type PhraseDefinition {
  definition: String!
  phrase: Phrase!
  phrase_definition_id: ID!
}

type PhraseDefinitionReadOutput {
  error: ErrorType!
  phrase_definition: PhraseDefinition
}

input PhraseDefinitionUpsertInput {
  definition: String!
  phrase_id: ID!
}

type PhraseDefinitionUpsertOutput {
  error: ErrorType!
  phrase_definition: PhraseDefinition
}

type PhraseDefinitionVote {
  last_updated_at: DateTime!
  phrase_definition_id: ID!
  phrase_definitions_vote_id: ID!
  user_id: ID!
  vote: Boolean!
}

type PhraseDefinitionWithVote {
  created_at: String!
  definition: String!
  downvotes: Int!
  phrase: Phrase!
  phrase_definition_id: ID!
  upvotes: Int!
}

type PhraseDefinitionWithVoteListOutput {
  error: ErrorType!
  phrase_definition_list: [PhraseDefinitionWithVote]!
}

input PhraseReadInput {
  phrase_id: ID!
}

type PhraseReadOutput {
  error: ErrorType!
  phrase: Phrase
}

type PhraseToPhraseTranslation {
  from_phrase_definition: PhraseDefinition!
  phrase_to_phrase_translation_id: ID!
  to_phrase_definition: PhraseDefinition!
}

type PhraseToPhraseTranslationReadOutput {
  error: ErrorType!
  phrase_to_phrase_translation: PhraseToPhraseTranslation
}

input PhraseToPhraseTranslationUpsertInput {
  from_phrase_definition_id: ID!
  to_phrase_definition_id: ID!
}

type PhraseToPhraseTranslationUpsertOutput {
  error: ErrorType!
  phrase_to_phrase_translation: PhraseToPhraseTranslation
}

input PhraseUpsertInput {
  dialect_code: String
  geo_code: String
  language_code: String!
  phraselike_string: String!
}

type PhraseUpsertOutput {
  error: ErrorType!
  phrase: Phrase
}

type PhraseVote {
  last_updated_at: DateTime!
  phrase_id: ID!
  phrase_vote_id: ID!
  user_id: ID!
  vote: Boolean!
}

type PhraseVoteOutput {
  error: ErrorType!
  phrase_vote: PhraseVote
}

type PhraseVoteStatus {
  downvotes: Int!
  phrase_id: ID!
  upvotes: Int!
}

type PhraseVoteStatusOutputRow {
  error: ErrorType!
  vote_status: PhraseVoteStatus
}

input PhraseVoteUpsertInput {
  phrase_id: ID!
  vote: Boolean!
}

type Post {
  created_at: String!
  created_by: Int!
  post_id: ID!
}

input PostCreateInput {
  content: String!
  parent_id: Int
}

type PostCreateOutput {
  error: ErrorType!
  post: Post
}

input PostReadInput {
  post_id: ID!
}

type PostReadOutput {
  error: ErrorType!
  post: Post
}

type Query {
  fileUploadUrlRequest(input: FileUploadUrlRequest!): FileUploadUrlResponse!
  getAllRecommendedTranslation(dialect_code: String!, geo_code: String!, language_code: String!): SiteTextTranslationWithVoteListOutput!
  getAllSiteTextDefinitions: SiteTextDefinitionListOutput!
  getAllTranslationFromSiteTextDefinitionID(dialect_code: String, geo_code: String, language_code: String!, site_text_id: String!, site_text_type_is_word: Boolean!): SiteTextTranslationWithVoteListOutput!
  getOrigMapContent(input: GetOrigMapContentInput!): GetOrigMapContentOutput!
  getOrigMapWords(input: GetOrigMapWordsInput): GetOrigMapWordsOutput!
  getOrigMapsList(input: GetOrigMapListInput!): GetOrigMapsListOutput!
  getPhraseDefinitionVoteStatus(phrase_definition_id: ID!): DefinitionVoteStatusOutputRow!
  getPhraseDefinitionsByLanguage(input: LanguageInput!): PhraseDefinitionWithVoteListOutput!
  getPhraseVoteStatus(phrase_id: ID!): PhraseVoteStatusOutputRow!
  getRecommendedTranslationFromSiteTextDefinitionID(dialect_code: String!, geo_code: String!, language_code: String!, site_text_id: String!, site_text_type_is_word: Boolean!): SiteTextTranslationWithVoteOutput!
  getSiteTextLanguage(id: ID!): SiteTextLanguageOutput!
  getSiteTextLanguageList: SiteTextLanguageListOutput!
  getVoteStatus(site_text_translation_id: String!): SiteTextTranslationVoteReadOutput!
  getWordDefinitionVoteStatus(word_definition_id: ID!): DefinitionVoteStatusOutputRow!
  getWordDefinitionsByLanguage(input: LanguageInput!): WordDefinitionWithVoteListOutput!
  getWordVoteStatus(word_id: ID!): WordVoteStatusOutputRow!
  phraseDefinitionRead(id: ID!): PhraseDefinitionReadOutput!
  phraseRead(input: PhraseReadInput!): PhraseReadOutput!
  phraseToPhraseTranslationRead(id: ID!): PhraseToPhraseTranslationReadOutput!
  phraseVoteRead(id: ID!): PhraseVoteOutput!
  postReadResolver(input: PostReadInput!): PostReadOutput!
  siteTextPhraseDefinitionRead(id: String!): SiteTextPhraseDefinitionReadOutput!
  siteTextTranslationRead(id: String!): SiteTextTranslationReadOutput!
  siteTextTranslationVoteRead(id: String!): SiteTextTranslationVoteReadOutput!
  siteTextWordDefinitionRead(id: String!): SiteTextWordDefinitionReadOutput!
  userReadResolver(input: UserReadInput!): UserReadOutput!
  wordDefinitionRead(id: ID!): WordDefinitionReadOutput!
  wordRead(input: WordReadInput!): WordReadOutput!
  wordToPhraseTranslationRead(id: ID!): WordToPhraseTranslationReadOutput!
  wordToWordTranslationRead(id: ID!): WordToWordTranslationReadOutput!
  wordVoteRead(id: ID!): WordVoteOutput!
}

input RegisterInput {
  avatar: String!
  email: String!
  password: String!
}

type RegisterOutput {
  error: ErrorType!
  session: Session
}

input ResetEmailRequestInput {
  email: String!
}

type ResetEmailRequestOutput {
  error: ErrorType!
}

type Session {
  avatar: String!
  avatar_url: String
  token: String!
  user_id: ID!
}

type SiteTextDefinitionListOutput {
  error: ErrorType!
  site_text_phrase_definition_list: [SiteTextPhraseDefinition]!
  site_text_word_definition_list: [SiteTextWordDefinition]!
}

type SiteTextLanguage {
  dialect_code: String
  geo_code: String
  language_code: String!
  site_text_language_id: ID!
}

type SiteTextLanguageListOutput {
  error: ErrorType!
  site_text_language_list: [SiteTextLanguage]!
}

type SiteTextLanguageOutput {
  error: ErrorType!
  site_text_language: SiteTextLanguage
}

input SiteTextLanguageUpsertInput {
  dialect_code: String
  geo_code: String
  language_code: String!
}

type SiteTextPhraseDefinition {
  phrase_definition: PhraseDefinition!
  site_text_id: ID!
}

type SiteTextPhraseDefinitionReadOutput {
  error: ErrorType!
  site_text_phrase_definition: SiteTextPhraseDefinition
}

input SiteTextPhraseDefinitionUpsertInput {
  phrase_definition_id: ID!
}

type SiteTextPhraseDefinitionUpsertOutput {
  error: ErrorType!
  site_text_phrase_definition: SiteTextPhraseDefinition
}

type SiteTextTranslation {
  from_definition: Definition!
  from_type_is_word: Boolean!
  site_text_translation_id: ID!
  to_definition: Definition!
  to_type_is_word: Boolean!
}

input SiteTextTranslationInput {
  from_definition_id: ID!
  from_type_is_word: Boolean!
  to_definition_id: ID!
  to_type_is_word: Boolean!
}

type SiteTextTranslationReadOutput {
  error: ErrorType!
  site_text_translation: SiteTextTranslation
}

input SiteTextTranslationUpsertInput {
  definitionlike_string: String!
  dialect_code: String
  geo_code: String
  is_word_definition: Boolean!
  language_code: String!
  site_text_id: ID!
  translationlike_string: String!
}

type SiteTextTranslationUpsertOutput {
  error: ErrorType!
  site_text_translation: SiteTextTranslation
}

type SiteTextTranslationVote {
  last_updated_at: DateTime!
  site_text_translation_id: ID!
  site_text_translation_vote_id: ID!
  user_id: ID!
  vote: Boolean!
}

type SiteTextTranslationVoteReadOutput {
  error: ErrorType!
  site_text_translation_vote: SiteTextTranslationVote
}

input SiteTextTranslationVoteUpsertInput {
  site_text_translation_id: ID!
  vote: Boolean!
}

type SiteTextTranslationVoteUpsertOutput {
  error: ErrorType!
  site_text_translation_vote: SiteTextTranslationVote
}

type SiteTextTranslationWithVote {
  created_at: String!
  downvotes: Int!
  from_definition: Definition!
  from_type_is_word: Boolean!
  site_text_translation_id: ID!
  to_definition: Definition!
  to_type_is_word: Boolean!
  upvotes: Int!
}

type SiteTextTranslationWithVoteListOutput {
  error: ErrorType!
  site_text_translation_with_vote_list: [SiteTextTranslationWithVote]!
}

type SiteTextTranslationWithVoteOutput {
  error: ErrorType!
  site_text_translation_with_vote: SiteTextTranslationWithVote
}

input SiteTextTranslationsFromInput {
  from_definition_id: ID!
  from_type_is_word: Boolean!
}

input SiteTextTranslationsToInput {
  definitionlike_string: String!
  dialect_code: String
  geo_code: String
  language_code: String!
  translationlike_string: String!
}

input SiteTextUpsertInput {
  definitionlike_string: String!
  dialect_code: String
  geo_code: String
  language_code: String!
  siteTextlike_string: String!
}

type SiteTextUpsertOutput {
  error: ErrorType!
  site_text_phrase_definition: SiteTextPhraseDefinition
  site_text_word_definition: SiteTextWordDefinition
}

type SiteTextWordDefinition {
  site_text_id: ID!
  word_definition: WordDefinition!
}

type SiteTextWordDefinitionReadOutput {
  error: ErrorType!
  site_text_word_definition: SiteTextWordDefinition
}

input SiteTextWordDefinitionUpsertInput {
  word_definition_id: ID!
}

type SiteTextWordDefinitionUpsertOutput {
  error: ErrorType!
  site_text_word_definition: SiteTextWordDefinition
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  avatar: String!
  avatar_url: String
  user_id: ID!
}

input UserReadInput {
  user_id: ID!
}

type UserReadOutput {
  error: ErrorType!
  user: User
}

type Version {
  content: String!
  created_at: String!
  license_title: String!
  post_id: Int!
  version_id: ID!
}

input VersionCreateInput {
  content: String!
  license_title: String!
  post_id: Int!
}

type VersionCreateOutput {
  error: ErrorType!
  version: Version
}

type VoteStatus {
  downvotes: Int!
  site_text_translation_id: String!
  upvotes: Int!
}

type VoteStatusOutputRow {
  error: ErrorType!
  vote_status: VoteStatus
}

type Word {
  dialect_code: String
  geo_code: String
  language_code: String!
  word: String!
  word_id: ID!
}

type WordDefinition {
  definition: String!
  word: Word!
  word_definition_id: ID!
}

type WordDefinitionReadOutput {
  error: ErrorType!
  word_definition: WordDefinition
}

input WordDefinitionUpsertInput {
  definition: String!
  word_id: ID!
}

type WordDefinitionUpsertOutput {
  error: ErrorType!
  word_definition: WordDefinition
}

type WordDefinitionVote {
  last_updated_at: DateTime!
  user_id: ID!
  vote: Boolean!
  word_definition_id: ID!
  word_definitions_vote_id: ID!
}

type WordDefinitionWithVote {
  created_at: String!
  definition: String!
  downvotes: Int!
  upvotes: Int!
  word: Word!
  word_definition_id: ID!
}

type WordDefinitionWithVoteListOutput {
  error: ErrorType!
  word_definition_list: [WordDefinitionWithVote]!
}

input WordReadInput {
  word_id: ID!
}

type WordReadOutput {
  error: ErrorType!
  word: Word
}

type WordToPhraseTranslation {
  from_word_definition: WordDefinition!
  to_phrase_definition: PhraseDefinition!
  word_to_phrase_translation_id: ID!
}

type WordToPhraseTranslationReadOutput {
  error: ErrorType!
  word_to_phrase_translation: WordToPhraseTranslation
}

input WordToPhraseTranslationUpsertInput {
  from_word_definition_id: ID!
  to_phrase_definition_id: ID!
}

type WordToPhraseTranslationUpsertOutput {
  error: ErrorType!
  word_to_phrase_translation: WordToPhraseTranslation
}

type WordToWordTranslation {
  from_word_definition: WordDefinition!
  to_word_definition: WordDefinition!
  word_to_word_translation_id: ID!
}

type WordToWordTranslationReadOutput {
  error: ErrorType!
  word_to_word_translation: WordToWordTranslation
}

input WordToWordTranslationUpsertInput {
  from_word_definition_id: ID!
  to_word_definition_id: ID!
}

type WordToWordTranslationUpsertOutput {
  error: ErrorType!
  word_to_word_translation: WordToWordTranslation
}

type WordTranslations {
  definition: String
  definition_id: String
  dialect_code: String
  geo_code: String
  language_code: String!
  translations: [WordWithVotes!]
  word: String!
  word_id: ID!
}

input WordUpsertInput {
  dialect_code: String
  geo_code: String
  language_code: String!
  wordlike_string: String!
}

type WordUpsertOutput {
  error: ErrorType!
  word: Word
}

type WordVote {
  last_updated_at: DateTime!
  user_id: ID!
  vote: Boolean!
  word_id: ID!
  words_vote_id: ID!
}

type WordVoteOutput {
  error: ErrorType!
  word_vote: WordVote
}

type WordVoteStatus {
  downvotes: Int!
  upvotes: Int!
  word_id: ID!
}

type WordVoteStatusOutputRow {
  error: ErrorType!
  vote_status: WordVoteStatus
}

input WordVoteUpsertInput {
  vote: Boolean!
  word_id: ID!
}

type WordWithVotes {
  definition: String
  definition_id: String
  dialect_code: String
  down_votes: String!
  geo_code: String
  language_code: String!
  up_votes: String!
  word: String!
  word_id: ID!
}