fragment MapDetailsOutputFragment on MapDetailsOutput {
  error
  mapDetails {
    is_original
    original_map_id
    translated_map_id
    map_file_name
    translated_percent
    language {
      language_code
      dialect_code
      geo_code
    }
    created_at
    created_by
    map_file_name_with_langs
    preview_file_url
    preview_file_id
    content_file_url
    content_file_id
  }
}

fragment MapDetailsOutputEdgeFragment on MapDetailsOutputEdge {
  cursor
  node {
    ...MapDetailsOutputFragment
  }
}

fragment MapWordOrPhraseFragment on MapWordOrPhrase {
  id
  type
  o_id
  o_like_string
  o_definition
  o_definition_id
  o_language_code
  o_dialect_code
  o_geo_code
  o_created_at
  o_created_by_user {
    ...UserFields
  }
}

fragment MapWordsAndPhrasesEdgeFragment on MapWordsAndPhrasesEdge {
  cursor
  node {
    ...MapWordOrPhraseFragment
  }
}

fragment WordWithDefinitionFragment on WordWithDefinition {
  word_id
  word
  language_code
  dialect_code
  geo_code
  definition
  definition_id
  created_at
  created_by_user {
    ...UserFields
  }
}

fragment PhraseWithDefinitionFragment on PhraseWithDefinition {
  phrase_id
  phrase
  language_code
  dialect_code
  geo_code
  definition
  definition_id
  created_at
  created_by_user {
    ...UserFields
  }
}

query GetOrigMapWordsAndPhrases(
  $original_map_id: String
  $lang: LanguageInput!
  $filter: String
  $quickFilter: String
  $onlyNotTranslatedTo: LanguageInput
  $onlyTranslatedTo: LanguageInput
  $after: ID
  $first: Int
) {
  getOrigMapWordsAndPhrases(
    input: {
      lang: $lang
      filter: $filter
      quickFilter: $quickFilter
      original_map_id: $original_map_id
      onlyNotTranslatedTo: $onlyNotTranslatedTo
      onlyTranslatedTo: $onlyTranslatedTo
    }
    after: $after
    first: $first
  ) {
    edges {
      ...MapWordsAndPhrasesEdgeFragment
    }
    pageInfo {
      startCursor
      endCursor
      hasNextPage
      hasPreviousPage
    }
  }
}

query GetOrigMapWordsAndPhrasesCount(
  $original_map_id: String
  $lang: LanguageInput!
  $filter: String
) {
  getOrigMapWordsAndPhrasesCount(
    input: { lang: $lang, filter: $filter, original_map_id: $original_map_id }
  ) {
    count
  }
}

query GetOrigMapWordsAndPhrasesPaginated(
  $original_map_id: String
  $lang: LanguageInput!
  $filter: String
  $offset: Int
  $limit: Int
) {
  getOrigMapWordsAndPhrasesPaginated(
    input: { lang: $lang, filter: $filter, original_map_id: $original_map_id }
    offset: $offset
    limit: $limit
  ) {
    mapWordsOrPhrases {
      ...MapWordOrPhraseFragment
    }
  }
}

query GetMapWordOrPhraseAsOrigByDefinitionId(
  $definition_id: ID!
  $is_word_definition: Boolean!
) {
  getMapWordOrPhraseAsOrigByDefinitionId(
    input: {
      definition_id: $definition_id
      is_word_definition: $is_word_definition
    }
  ) {
    error
    wordOrPhrase {
      ...WordWithDefinitionFragment
      ...PhraseWithDefinitionFragment
    }
  }
}

query GetAllMapsList($lang: LanguageInput, $after: ID, $first: Int) {
  getAllMapsList(input: { lang: $lang }, after: $after, first: $first) {
    edges {
      ...MapDetailsOutputEdgeFragment
    }
    pageInfo {
      ...PageInfoFragment
    }
  }
}

query GetMapDetails($map_id: ID!, $is_original: Boolean!) {
  getMapDetails(input: { map_id: $map_id, is_original: $is_original }) {
    ...MapDetailsOutputFragment
  }
}

query IsAdminLoggedIn($input: IsAdminIdInput!) {
  loggedInIsAdmin(input: $input) {
    isAdmin
  }
}

mutation StartZipMapDownload($language: LanguageInput!) {
  startZipMapDownload(input: { language: $language }) {
    error
  }
}

subscription SubscribeToZipMap {
  ZipMapReport {
    resultZipUrl
    status
    message
    errors
  }
}

mutation MapUpload(
  $file: Upload!
  $previewFileId: String
  $file_type: String!
  $file_size: Int!
) {
  mapUpload(
    file: $file
    previewFileId: $previewFileId
    file_type: $file_type
    file_size: $file_size
  ) {
    error
    mapDetailsOutput {
      ...MapDetailsOutputFragment
    }
  }
}

mutation MapDelete($mapId: String!, $is_original: Boolean!) {
  mapDelete(input: { mapId: $mapId, is_original: $is_original }) {
    error
    deletedMapId
  }
}

mutation MapsTranslationsReset {
  mapsTranslationsReset {
    error
  }
}

mutation MapsReTranslate($forLangTag: String) {
  mapsReTranslate(forLangTag: $forLangTag) {
    error
  }
}

fragment MapVoteStatusFragment on MapVoteStatus {
  map_id
  is_original
  downvotes
  upvotes
}

mutation ToggleMapVoteStatus(
  $map_id: ID!
  $is_original: Boolean!
  $vote: Boolean!
) {
  toggleMapVoteStatus(map_id: $map_id, is_original: $is_original, vote: $vote) {
    error
    vote_status {
      ...MapVoteStatusFragment
    }
  }
}

query GetMapVoteStatus($map_id: ID!, $is_original: Boolean!) {
  getMapVoteStatus(map_id: $map_id, is_original: $is_original) {
    error
    vote_status {
      ...MapVoteStatusFragment
    }
  }
}
